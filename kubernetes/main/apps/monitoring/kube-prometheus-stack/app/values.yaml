---
crds:
  enabled: true
cleanPrometheusOperatorObjectNames: true
alertmanager:
  ingress:
    enabled: true
    pathType: Prefix
    ingressClassName: internal-nginx
    hosts:
      - &host talertmanager.${SECRET_DOMAIN}
    tls:
      - hosts: [*host]
  alertmanagerSpec:
    replicas: 2
    useExistingSecret: false
    # configSecret: alertmanager-secret
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: lh-one-delete
          resources:
            requests:
              storage: 1Gi
kubelet:
  enabled: true
  serviceMonitor:
    metricRelabelings:
      # Drop high cardinality labels
      - action: labeldrop
        regex: (uid)
      - action: labeldrop
        regex: (id|name)
      - action: drop
        sourceLabels: ["__name__"]
        regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
kubeApiServer:
  enabled: true
  serviceMonitor:
    metricRelabelings:
      # Drop high cardinality labels
      - action: drop
        sourceLabels: ["__name__"]
        regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
      - action: drop
        sourceLabels: ["__name__"]
        regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
kubeControllerManager:
  enabled: true
  endpoints: &cp
    - 172.16.11.11
    - 172.16.11.12
    - 172.16.11.13
kubeEtcd:
  enabled: true
  endpoints: *cp
kubeScheduler:
  enabled: true
  endpoints: *cp
kubeProxy:
  enabled: false
prometheus:
  ingress:
    enabled: true
    ingressClassName: internal-nginx
    pathType: Prefix
    hosts:
      - *host
    tls:
      - hosts: [*host]
  thanosService:
    enabled: true
  thanosServiceMonitor:
    enabled: true
  prometheusSpec:
    podMetadata:
      annotations:
        secret.reloader.stakater.com/reload: &secret thanos-objstore-config
    replicas: 2
    replicaExternalLabelName: __replica__
    scrapeInterval: 1m # Must match interval in Grafana Helm chart
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    scrapeConfigSelectorNilUsesHelmValues: false
    enableAdminAPI: true
    walCompression: true
    enableFeatures:
      - auto-gomemlimit
      - memory-snapshot-on-shutdown
      - new-service-discovery-manager
    image:
      registry: quay.io
      repository: prometheus/prometheus
      tag: v2.51.0-dedupelabels
    thanos:
      image: quay.io/thanos/thanos:v0.35.1
      version: v0.34.1
      # objectStorageConfig:
      #   existingSecret:
      #     name: *secret
      #     key: config
    retention: 2d
    retentionSize: 15GB
    externalLabels:
      cluster: main
    resources:
      requests:
        cpu: 100m
      limits:
        memory: 1500Mi
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: lh-one-delete
          resources:
            requests:
              storage: 20Gi
nodeExporter:
  enabled: true
prometheus-node-exporter:
  fullnameOverride: node-exporter
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels: ["__meta_kubernetes_pod_node_name"]
          targetLabel: kubernetes_node
kubeStateMetrics:
  enabled: true
kube-state-metrics:
  fullnameOverride: kube-state-metrics
  metricLabelsAllowlist:
    - pods=[*]
    - deployments=[*]
    - persistentvolumeclaims=[*]
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels: ["__meta_kubernetes_pod_node_name"]
          targetLabel: kubernetes_node
grafana:
  enabled: false
  forceDeployDashboards: true
  sidecar:
    dashboards:
      annotations:
        grafana_folder: Kubernetes
      multicluster:
        etcd:
          enabled: true