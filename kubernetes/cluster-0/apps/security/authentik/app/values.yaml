---
global:
  podAnnotations:
    secret.reloader.stakater.com/reload: authentik-secret, authentik-db-secret
  # podLabels:
  #   db.home.arpa/pg: postgres
  #   egress.home.arpa/apiserver: allow
  #   egress.home.arpa/internet: allow
  #   egress.home.arpa/kubedns: allow # FIXME: Remove when clusterNetworkPolicy is in place
  #   ingress.home.arpa/nginx-internal: allow
  deploymentStrategy:
    type: RollingUpdate
  envFrom:
    - secretRef:
        name: authentik-secret
    - secretRef:
        name: authentik-db-secret

authentik:
  log_level: info
  redis:
    host: "authentik-redis"
    db: 1

postgresql:
  enabled: false

prometheus:
  rules:
    enabled: false # TODO: Add later once monitoring is setup

redis:
  enabled: false

server:
  podAnnotations:
    secret.reloader.stakater.com/reload:
  podLabels:
    ingress.home.arpa/nginx-external: allow
    prom.home.arpa/kps: allow
  autoscaling:
    enabled: true
    minReplicas: 1
  ingress:
    enabled: true
    ingressClassName: external-nginx
    annotations:
      external-dns.alpha.kubernetes.io/target: ingress-ext.${SECRET_DOMAIN}
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    hosts:
      - "${HOSTNAME}"
    tls:
      - hosts:
          - "${HOSTNAME}"
  metrics:
    prometheus:
      serviceMonitor:
        enabled: true

worker:
  autoscaling:
    enabled: true
    minReplicas: 1